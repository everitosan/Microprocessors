gavrasm Gerd's AVR assembler version 3.3 (C)2012 by DG4FAC
----------------------------------------------------------
Source file: main.asm
Hex file:    main.hex
Eeprom file: main.eep
Compiled:    26.10.2015, 10:59:20
Pass:        2
     1: ;Created by EVESAN
     2: .DEVICE "ATmega48" ;definicion del micro a usar para el compilador
     3: 
     4: .def a = R16; definimos a como el registro 16
     5: .def b = R17; definimos b como el registro 17
     6: .def c = R20; definimos c como el registro 20
     7: .def mode = R18; definimos mode como el registro 18
     8: .def led = R19; definimos a led el registro 19
     9: 
    10:           .org 0000 ;inicializa el stack
    11: 000000   EF0F  ldi a, low(RAMEND); carga en a el valor bajo de RAMEND
    12: 000001   BF0D  out spl, a ; carga el stack pointer low el valor de a
    13: 000002   E002  ldi a, high(RAMEND); carga en a el valor alto de RAMEND
    14: 000003   BF0E  out sph, a ; carga el stack pointer high el valor de a
    15: 
    16: 000004   EF2F  ldi mode, $FF; carga R17 con nivel alto
    17: 000005   B92A  out ddrd, mode; configura ddrc como salida
    18: 
    19: 
    20: 000006   EF3F  ldi led, $FF; carga un valor de 1 a led
    21: 000007   B93B  out portd, led ; manda a d el contenido de led
    22: 000008   D004  rcall retardo ; retardo
    23: 000009   E030  ldi led, $00; carga un valor de 0 a led
    24: 00000A   B93B  out portd, led ; manda a d el contenido de led
    25: 00000B   D001  rcall retardo ; retardo
    26: 00000C   CFF9  rjmp fin
    27: 
    28: 
    29: 00000D   EF47  ldi c, $F7 ;1 CM
    30: 00000E   EF07  ldi a, $F7 ; 1 CM
    31: 00000F   EF17  ldi b, $F7 ;1 CM
    32:           ;el bloque loop tarda 1000 CM por cada vez que se llame
    33: 000010   951A  dec b; 1 (255)
    34: 000011   3010  cpi b, $00 ;1 (255)
    35: 000012   F7E9  brne loop ;2 (255)
    36: 
    37: 000013   950A  dec a; 1 CM
    38: 000014   3000  cpi a, $00  ; 1 CM
    39: 000015   F7C9  brne loop2; 2CM branch if not equal
    40: 000016   954A  dec c; 1 CM
    41: 000017   F7B1  brne loop3; 1CM
    42: 000018   9508  ret ;4 CM retorna a dónde fué llamado
    43: 
    44: 
    45: ;          ;Created by EVESAN
    46: ;          .DEVICE "ATmega48"
    47: ;
    48: ;          .def a = R16
    49: ;          .def b = R17
    50: ;          .def c = R18
    51: ;          .def modo = R19
    52: ;          .def led = R20
    53: ;          .def ledOff = R21
    54: ;
    55: ;                    .org 0000
    56: ;                    ldi a, low(RAMEND)
    57: ;                    out spl, a
    58: ;                    ldi a, high(RAMEND)
    59: ;                    out sph, a
    60: ;
    61: ;                    ldi modo, $FF
    62: ;                    out ddrd, modo
    63: ;
    64: ;          fin:      ldi led, $01
    65: ;                    out portd, led
    66: ;                    rcall retardo
    67: ;                    out portd, ledOff
    68: ;                    rcall retardo
    69: ;                    ldi led, $0F
    70: ;                    out portd, led
    71: ;                    rcall retardo
    72: ;                    out portd, ledOff
    73: ;                    rcall retardo
    74: ;                    ldi led, $F0
    75: ;                    out portd, led
    76: ;                    rcall retardo
    77: ;                    out portd, ledOff
    78: ;                    rcall retardo
    79: ;                    rjmp fin
    80: ;
    81: ;
    82: ;          retardo:  ldi c, $04
    83: ;          loop3:    ldi a, $FF ; 1 CM
    84: ;          loop2:    ldi b, $FF ;1 CM
    85: ;                    ;el bloque loop tarda 1000 CM por cada vez que se llame
    86: ;          loop:     dec b; 1 (255)
    87: ;                    cpi b, $00 ;1 (255)
    88: ;                    brne loop ;2 (255)
    89: ;
    90: ;                    dec a; 1 CM
    91: ;                    cpi a, $00  ; 1 CM
    92: ;                    brne loop2; 2CM branch if not equal
    93: ;                    dec c
    94: ;                    brne loop3
    95: ;                    ret ;4 CM retorna a dónde fué llamado

Program             :       25 words.
Constants           :        0 words.
Total program memory:       25 words.
Eeprom space        :        0 bytes.
Data segment        :        0 bytes.
Compilation completed, no errors.
Compilation endet 26.10.2015, 10:59:20
